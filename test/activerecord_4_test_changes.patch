diff --git a/activerecord/test/cases/adapter_test.rb b/activerecord/test/cases/adapter_test.rb
index e28bb7b..48b2d6d 100644
--- a/activerecord/test/cases/adapter_test.rb
+++ b/activerecord/test/cases/adapter_test.rb
@@ -11,6 +11,7 @@ module ActiveRecord
     # PostgreSQL does not support null bytes in strings
     unless current_adapter?(:PostgreSQLAdapter)
       def test_update_prepared_statement
+        return skip "FDBSQL: Strings with embeddeds nulls not supported" if current_adapter?(:FdbSqlAdapter)
         b = Book.create(name: "my \x00 book")
         b.reload
         assert_equal "my \x00 book", b.name
@@ -158,6 +159,7 @@ module ActiveRecord
     end
 
     def test_disable_referential_integrity
+      return skip "FDBSQL: Disabling refential integrity is not supported" if current_adapter?(:FdbSqlAdapter)
       assert_nothing_raised do
         @connection.disable_referential_integrity do
           # Oracle adapter uses prefetched primary key values from sequence and passes them to connection adapter insert method
diff --git a/activerecord/test/cases/migration_test.rb b/activerecord/test/cases/migration_test.rb
index e99312c..d1d736f 100644
--- a/activerecord/test/cases/migration_test.rb
+++ b/activerecord/test/cases/migration_test.rb
@@ -443,7 +443,7 @@ class MigrationTest < ActiveRecord::TestCase
   end
 
   def test_out_of_range_limit_should_raise
-    skip("MySQL and PostgreSQL only") unless current_adapter?(:MysqlAdapter, :Mysql2Adapter, :PostgreSQLAdapter)
+    skip("MySQL, PostgreSQL and FdbSql only") unless current_adapter?(:MysqlAdapter, :Mysql2Adapter, :PostgreSQLAdapter, :FdbSqlAdapter)
 
     Person.connection.drop_table :test_limits rescue nil
     assert_raise(ActiveRecord::ActiveRecordError, "integer limit didn't raise") do
